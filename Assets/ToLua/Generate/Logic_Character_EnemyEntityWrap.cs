//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Character_EnemyEntityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Character.EnemyEntity), typeof(Logic.Character.CharacterEntity));
		L.RegFunction("OnHPChangedHandler", OnHPChangedHandler);
		L.RegFunction("OnForceDeadHandler", OnForceDeadHandler);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("canOrderSkill1", get_canOrderSkill1, set_canOrderSkill1);
		L.RegVar("canOrderSkill2", get_canOrderSkill2, set_canOrderSkill2);
		L.RegVar("canPlaySkill1", get_canPlaySkill1, null);
		L.RegVar("canPlaySkill2", get_canPlaySkill2, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnHPChangedHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)ToLua.CheckObject(L, 1, typeof(Logic.Character.EnemyEntity));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.OnHPChangedHandler(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnForceDeadHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)ToLua.CheckObject(L, 1, typeof(Logic.Character.EnemyEntity));
			obj.OnForceDeadHandler();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canOrderSkill1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool ret = obj.canOrderSkill1;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canOrderSkill1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canOrderSkill2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool ret = obj.canOrderSkill2;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canOrderSkill2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canPlaySkill1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool ret = obj.canPlaySkill1;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canPlaySkill1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canPlaySkill2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool ret = obj.canPlaySkill2;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canPlaySkill2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canOrderSkill1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.canOrderSkill1 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canOrderSkill1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canOrderSkill2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.EnemyEntity obj = (Logic.Character.EnemyEntity)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.canOrderSkill2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index canOrderSkill2 on a nil value" : e.Message);
		}
	}
}

