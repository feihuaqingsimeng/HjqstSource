//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Skill_Model_MechanicsDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Skill.Model.MechanicsData), typeof(System.Object));
		L.RegFunction("GetMechanicsDatas", GetMechanicsDatas);
		L.RegFunction("GetMechanicsDataById", GetMechanicsDataById);
		L.RegFunction("ExistMechanicsId", ExistMechanicsId);
		L.RegFunction("New", _CreateLogic_Skill_Model_MechanicsData);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("mechanicsId", get_mechanicsId, set_mechanicsId);
		L.RegVar("targetType", get_targetType, set_targetType);
		L.RegVar("rangeType", get_rangeType, set_rangeType);
		L.RegVar("needTarget", get_needTarget, set_needTarget);
		L.RegVar("mechanicsType", get_mechanicsType, set_mechanicsType);
		L.RegVar("effectIds", get_effectIds, set_effectIds);
		L.RegVar("audioType", get_audioType, set_audioType);
		L.RegVar("audioDelay", get_audioDelay, set_audioDelay);
		L.RegVar("maxLayer", get_maxLayer, set_maxLayer);
		L.RegVar("targetInt", null, set_targetInt);
		L.RegVar("rangeTypeInt", null, set_rangeTypeInt);
		L.RegVar("mechanicsTypeInt", null, set_mechanicsTypeInt);
		L.RegVar("effectIdsStr", null, set_effectIdsStr);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_Skill_Model_MechanicsData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Logic.Skill.Model.MechanicsData obj = new Logic.Skill.Model.MechanicsData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.Skill.Model.MechanicsData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMechanicsDatas(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.Dictionary<uint,Logic.Skill.Model.MechanicsData> o = Logic.Skill.Model.MechanicsData.GetMechanicsDatas();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMechanicsDataById(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
			Logic.Skill.Model.MechanicsData o = Logic.Skill.Model.MechanicsData.GetMechanicsDataById(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExistMechanicsId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
			bool o = Logic.Skill.Model.MechanicsData.ExistMechanicsId(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mechanicsId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint ret = obj.mechanicsId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.TargetType ret = obj.targetType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rangeType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.RangeType ret = obj.rangeType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rangeType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			bool ret = obj.needTarget;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index needTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mechanicsType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.MechanicsType ret = obj.mechanicsType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint[] ret = obj.effectIds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			int ret = obj.audioType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			float ret = obj.audioDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxLayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint ret = obj.maxLayer;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxLayer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.mechanicsId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.TargetType arg0 = (Logic.Enums.TargetType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.TargetType));
			obj.targetType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rangeType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.RangeType arg0 = (Logic.Enums.RangeType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.RangeType));
			obj.rangeType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rangeType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needTarget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index needTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			Logic.Enums.MechanicsType arg0 = (Logic.Enums.MechanicsType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.MechanicsType));
			obj.mechanicsType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
			obj.effectIds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.audioType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.audioDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxLayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.maxLayer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxLayer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetInt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.targetInt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetInt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rangeTypeInt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.rangeTypeInt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rangeTypeInt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsTypeInt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.mechanicsTypeInt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsTypeInt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectIdsStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.MechanicsData obj = (Logic.Skill.Model.MechanicsData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.effectIdsStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectIdsStr on a nil value" : e.Message);
		}
	}
}

