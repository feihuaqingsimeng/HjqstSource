//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_UI_FightResult_View_NumberIncreaseActionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.UI.FightResult.View.NumberIncreaseAction), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("text_num", get_text_num, set_text_num);
		L.RegVar("startNumber", get_startNumber, set_startNumber);
		L.RegVar("endNumber", get_endNumber, set_endNumber);
		L.RegVar("duringTime", get_duringTime, set_duringTime);
		L.RegVar("delayTime", get_delayTime, set_delayTime);
		L.RegVar("reset", get_reset, set_reset);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, typeof(Logic.UI.FightResult.View.NumberIncreaseAction)))
			{
				Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)ToLua.ToObject(L, 1);
				obj.Init();
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, typeof(Logic.UI.FightResult.View.NumberIncreaseAction), typeof(int), typeof(int), typeof(float)))
			{
				Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				obj.Init(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Logic.UI.FightResult.View.NumberIncreaseAction.Init");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text_num(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			UnityEngine.UI.Text ret = obj.text_num;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index text_num on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			int ret = obj.startNumber;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index startNumber on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_endNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			int ret = obj.endNumber;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index endNumber on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_duringTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			float ret = obj.duringTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index duringTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_delayTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			float ret = obj.delayTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index delayTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			bool ret = obj.reset;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index reset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_text_num(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			UnityEngine.UI.Text arg0 = (UnityEngine.UI.Text)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.UI.Text));
			obj.text_num = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index text_num on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.startNumber = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index startNumber on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_endNumber(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.endNumber = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index endNumber on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_duringTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.duringTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index duringTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_delayTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.delayTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index delayTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_reset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.FightResult.View.NumberIncreaseAction obj = (Logic.UI.FightResult.View.NumberIncreaseAction)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.reset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index reset on a nil value" : e.Message);
		}
	}
}

