//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_UI_UIMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.UI.UIMgr), typeof(SingletonMono<Logic.UI.UIMgr>));
		L.RegFunction("GetParticularUITransform", GetParticularUITransform);
		L.RegFunction("Open", Open);
		L.RegFunction("IsOpening", IsOpening);
		L.RegFunction("OpenExhibition", OpenExhibition);
		L.RegFunction("CloseExhibition", CloseExhibition);
		L.RegFunction("Get", Get);
		L.RegFunction("GetOpenUICount", GetOpenUICount);
		L.RegFunction("CloseAll", CloseAll);
		L.RegFunction("Close", Close);
		L.RegFunction("CloseImmediate", CloseImmediate);
		L.RegFunction("CloseLayerBelow", CloseLayerBelow);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("designResolution", get_designResolution, set_designResolution);
		L.RegVar("ui3DRoot", get_ui3DRoot, set_ui3DRoot);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetParticularUITransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.Transform o = obj.GetParticularUITransform(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Open(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.GameObject o = obj.Open(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsOpening(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsOpening(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenExhibition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.OpenExhibition(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseExhibition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.CloseExhibition(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.Get(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetOpenUICount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			Logic.UI.EUISortingLayer arg0 = (Logic.UI.EUISortingLayer)ToLua.CheckObject(L, 2, typeof(Logic.UI.EUISortingLayer));
			int o = obj.GetOpenUICount(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			obj.CloseAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, typeof(Logic.UI.UIMgr), typeof(Logic.UI.EUISortingLayer)))
			{
				Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.ToObject(L, 1);
				Logic.UI.EUISortingLayer arg0 = (Logic.UI.EUISortingLayer)ToLua.ToObject(L, 2);
				obj.Close(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, typeof(Logic.UI.UIMgr), typeof(string)))
			{
				Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.Close(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Logic.UI.UIMgr.Close");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseImmediate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			string arg0 = ToLua.CheckString(L, 2);
			obj.CloseImmediate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseLayerBelow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)ToLua.CheckObject(L, 1, typeof(Logic.UI.UIMgr));
			Logic.UI.EUISortingLayer arg0 = (Logic.UI.EUISortingLayer)ToLua.CheckObject(L, 2, typeof(Logic.UI.EUISortingLayer));
			obj.CloseLayerBelow(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_designResolution(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)o;
			UnityEngine.Vector2 ret = obj.designResolution;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index designResolution on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ui3DRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)o;
			UnityEngine.Transform ret = obj.ui3DRoot;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ui3DRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_designResolution(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.designResolution = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index designResolution on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ui3DRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.UIMgr obj = (Logic.UI.UIMgr)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.ui3DRoot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ui3DRoot on a nil value" : e.Message);
		}
	}
}

