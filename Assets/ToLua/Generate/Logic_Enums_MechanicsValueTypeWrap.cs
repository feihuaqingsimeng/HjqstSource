//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Enums_MechanicsValueTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Logic.Enums.MechanicsValueType));
		L.RegVar("None", get_None, null);
		L.RegVar("Time", get_Time, null);
		L.RegVar("Probabiblity", get_Probabiblity, null);
		L.RegVar("FixedValue", get_FixedValue, null);
		L.RegVar("PercentValue", get_PercentValue, null);
		L.RegVar("Extra", get_Extra, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Time(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.Time);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Probabiblity(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.Probabiblity);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FixedValue(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.FixedValue);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PercentValue(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.PercentValue);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Extra(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.MechanicsValueType.Extra);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Logic.Enums.MechanicsValueType o = (Logic.Enums.MechanicsValueType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

