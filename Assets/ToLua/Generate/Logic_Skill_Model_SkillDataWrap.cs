//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Skill_Model_SkillDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Skill.Model.SkillData), typeof(System.Object));
		L.RegFunction("GetSkillDatas", GetSkillDatas);
		L.RegFunction("GetSkillDataById", GetSkillDataById);
		L.RegFunction("New", _CreateLogic_Skill_Model_SkillData);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("skillId", get_skillId, set_skillId);
		L.RegVar("skillName", get_skillName, set_skillName);
		L.RegVar("skillDesc", get_skillDesc, set_skillDesc);
		L.RegVar("skillIcon", get_skillIcon, set_skillIcon);
		L.RegVar("skillType", get_skillType, set_skillType);
		L.RegVar("desTypeIconName", get_desTypeIconName, set_desTypeIconName);
		L.RegVar("desTypeIconName2", get_desTypeIconName2, set_desTypeIconName2);
		L.RegVar("showTime", get_showTime, set_showTime);
		L.RegVar("CD", get_CD, set_CD);
		L.RegVar("effectIds", get_effectIds, set_effectIds);
		L.RegVar("aoeFlyEffects", get_aoeFlyEffects, set_aoeFlyEffects);
		L.RegVar("aoeEffects", get_aoeEffects, set_aoeEffects);
		L.RegVar("flyEffectIds", get_flyEffectIds, set_flyEffectIds);
		L.RegVar("timeline", get_timeline, set_timeline);
		L.RegVar("mechanicsValues", get_mechanicsValues, set_mechanicsValues);
		L.RegVar("bootTime", get_bootTime, set_bootTime);
		L.RegVar("attackableType", get_attackableType, set_attackableType);
		L.RegVar("audioIds", get_audioIds, set_audioIds);
		L.RegVar("audioDelay", get_audioDelay, set_audioDelay);
		L.RegVar("pauseTime", get_pauseTime, set_pauseTime);
		L.RegVar("pause", get_pause, set_pause);
		L.RegVar("fullScreenTime", get_fullScreenTime, set_fullScreenTime);
		L.RegVar("fullScreenLength", get_fullScreenLength, set_fullScreenLength);
		L.RegVar("blackTime", get_blackTime, set_blackTime);
		L.RegVar("blackLength", get_blackLength, set_blackLength);
		L.RegVar("cameraTime", get_cameraTime, set_cameraTime);
		L.RegVar("cameraLength", get_cameraLength, set_cameraLength);
		L.RegVar("floatable", get_floatable, set_floatable);
		L.RegVar("tumbleable", get_tumbleable, set_tumbleable);
		L.RegVar("skillTypeInt", null, set_skillTypeInt);
		L.RegVar("effectsIdsStr", null, set_effectsIdsStr);
		L.RegVar("AoeFlyEffect", null, set_AoeFlyEffect);
		L.RegVar("AoeEffectStr", null, set_AoeEffectStr);
		L.RegVar("flyEffectIdsStr", null, set_flyEffectIdsStr);
		L.RegVar("timelineStr", null, set_timelineStr);
		L.RegVar("mechanicsValuesStr", null, set_mechanicsValuesStr);
		L.RegVar("AttackableInt", null, set_AttackableInt);
		L.RegVar("audioIdStr", null, set_audioIdStr);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_Skill_Model_SkillData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Logic.Skill.Model.SkillData obj = new Logic.Skill.Model.SkillData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.Skill.Model.SkillData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillDatas(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			System.Collections.Generic.Dictionary<uint,Logic.Skill.Model.SkillData> o = Logic.Skill.Model.SkillData.GetSkillDatas();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillDataById(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
			Logic.Skill.Model.SkillData o = Logic.Skill.Model.SkillData.GetSkillDataById(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint ret = obj.skillId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string ret = obj.skillName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillDesc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string ret = obj.skillDesc;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillDesc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillIcon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string ret = obj.skillIcon;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillIcon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			Logic.Enums.SkillType ret = obj.skillType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_desTypeIconName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string ret = obj.desTypeIconName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index desTypeIconName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_desTypeIconName2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string ret = obj.desTypeIconName2;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index desTypeIconName2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool ret = obj.showTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index showTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.CD;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] ret = obj.effectIds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aoeFlyEffects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] ret = obj.aoeFlyEffects;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aoeFlyEffects on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aoeEffects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] ret = obj.aoeEffects;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aoeEffects on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_flyEffectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<uint> ret = obj.flyEffectIds;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index flyEffectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_timeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.Dictionary<float,System.Collections.Generic.List<uint>> ret = obj.timeline;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeline on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mechanicsValues(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<System.Collections.Generic.List<Triple<float,float,float>>> ret = obj.mechanicsValues;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsValues on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bootTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.bootTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bootTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_attackableType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			Logic.Enums.AttackableType ret = obj.attackableType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index attackableType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<int> ret = obj.audioIds;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.audioDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pauseTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.pauseTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pauseTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.pause;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pause on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fullScreenTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.fullScreenTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullScreenTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fullScreenLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.fullScreenLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullScreenLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blackTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.blackTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blackTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blackLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.blackLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blackLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cameraTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.cameraTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cameraTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cameraLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float ret = obj.cameraLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cameraLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_floatable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool ret = obj.floatable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index floatable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tumbleable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool ret = obj.tumbleable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tumbleable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.skillId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.skillName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillDesc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.skillDesc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillDesc on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillIcon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.skillIcon = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillIcon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			Logic.Enums.SkillType arg0 = (Logic.Enums.SkillType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.SkillType));
			obj.skillType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_desTypeIconName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.desTypeIconName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index desTypeIconName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_desTypeIconName2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.desTypeIconName2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index desTypeIconName2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.showTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index showTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.CD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
			obj.effectIds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aoeFlyEffects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
			obj.aoeFlyEffects = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aoeFlyEffects on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aoeEffects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
			obj.aoeEffects = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aoeEffects on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_flyEffectIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<uint> arg0 = (System.Collections.Generic.List<uint>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<uint>));
			obj.flyEffectIds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index flyEffectIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_timeline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.Dictionary<float,System.Collections.Generic.List<uint>> arg0 = (System.Collections.Generic.Dictionary<float,System.Collections.Generic.List<uint>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<float,System.Collections.Generic.List<uint>>));
			obj.timeline = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeline on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsValues(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<System.Collections.Generic.List<Triple<float,float,float>>> arg0 = (System.Collections.Generic.List<System.Collections.Generic.List<Triple<float,float,float>>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<System.Collections.Generic.List<Triple<float,float,float>>>));
			obj.mechanicsValues = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsValues on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bootTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.bootTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bootTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_attackableType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			Logic.Enums.AttackableType arg0 = (Logic.Enums.AttackableType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.AttackableType));
			obj.attackableType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index attackableType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioIds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			System.Collections.Generic.List<int> arg0 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<int>));
			obj.audioIds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioIds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.audioDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pauseTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.pauseTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pauseTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pause(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.pause = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pause on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fullScreenTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fullScreenTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullScreenTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fullScreenLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fullScreenLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullScreenLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blackTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.blackTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blackTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blackLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.blackLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index blackLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cameraTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.cameraTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cameraTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cameraLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.cameraLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cameraLength on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_floatable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.floatable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index floatable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tumbleable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tumbleable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tumbleable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillTypeInt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.skillTypeInt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillTypeInt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectsIdsStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.effectsIdsStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectsIdsStr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AoeFlyEffect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.AoeFlyEffect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AoeFlyEffect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AoeEffectStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.AoeEffectStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AoeEffectStr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_flyEffectIdsStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.flyEffectIdsStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index flyEffectIdsStr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_timelineStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.timelineStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timelineStr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsValuesStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.mechanicsValuesStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsValuesStr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AttackableInt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AttackableInt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AttackableInt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioIdStr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillData obj = (Logic.Skill.Model.SkillData)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.audioIdStr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index audioIdStr on a nil value" : e.Message);
		}
	}
}

