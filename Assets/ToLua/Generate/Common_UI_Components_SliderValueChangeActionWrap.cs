//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Common_UI_Components_SliderValueChangeActionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Common.UI.Components.SliderValueChangeAction), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Get", Get);
		L.RegFunction("StartValueChangeActionTo", StartValueChangeActionTo);
		L.RegFunction("StartValueChangeActionList", StartValueChangeActionList);
		L.RegFunction("CancelAction", CancelAction);
		L.RegFunction("SetValueChangeUpdate", SetValueChangeUpdate);
		L.RegFunction("SetReach100PercentUpdate", SetReach100PercentUpdate);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.GameObject));
			Common.UI.Components.SliderValueChangeAction o = Common.UI.Components.SliderValueChangeAction.Get(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartValueChangeActionTo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Common.UI.Components.SliderValueChangeAction obj = (Common.UI.Components.SliderValueChangeAction)ToLua.CheckObject(L, 1, typeof(Common.UI.Components.SliderValueChangeAction));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			Common.UI.Components.SliderValueChangeAction o = obj.StartValueChangeActionTo(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartValueChangeActionList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Common.UI.Components.SliderValueChangeAction obj = (Common.UI.Components.SliderValueChangeAction)ToLua.CheckObject(L, 1, typeof(Common.UI.Components.SliderValueChangeAction));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			Common.UI.Components.SliderValueChangeAction o = obj.StartValueChangeActionList(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CancelAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Common.UI.Components.SliderValueChangeAction obj = (Common.UI.Components.SliderValueChangeAction)ToLua.CheckObject(L, 1, typeof(Common.UI.Components.SliderValueChangeAction));
			obj.CancelAction();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetValueChangeUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Common.UI.Components.SliderValueChangeAction obj = (Common.UI.Components.SliderValueChangeAction)ToLua.CheckObject(L, 1, typeof(Common.UI.Components.SliderValueChangeAction));
			System.Action<float> arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action<float>)ToLua.CheckObject(L, 2, typeof(System.Action<float>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action<float>), func) as System.Action<float>;
			}

			Common.UI.Components.SliderValueChangeAction o = obj.SetValueChangeUpdate(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetReach100PercentUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Common.UI.Components.SliderValueChangeAction obj = (Common.UI.Components.SliderValueChangeAction)ToLua.CheckObject(L, 1, typeof(Common.UI.Components.SliderValueChangeAction));
			System.Action arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (System.Action)ToLua.CheckObject(L, 2, typeof(System.Action));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(System.Action), func) as System.Action;
			}

			Common.UI.Components.SliderValueChangeAction o = obj.SetReach100PercentUpdate(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

