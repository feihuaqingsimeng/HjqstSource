//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Character_Model_CharacterBaseInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Character.Model.CharacterBaseInfo), typeof(System.Object));
		L.RegFunction("UpdateCharacterBaseInfo", UpdateCharacterBaseInfo);
		L.RegFunction("CreateCharacterBaseInfo", CreateCharacterBaseInfo);
		L.RegFunction("New", _CreateLogic_Character_Model_CharacterBaseInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("instanceID", get_instanceID, set_instanceID);
		L.RegVar("baseId", get_baseId, set_baseId);
		L.RegVar("hitId", get_hitId, set_hitId);
		L.RegVar("skillId1", get_skillId1, set_skillId1);
		L.RegVar("skillId2", get_skillId2, set_skillId2);
		L.RegVar("passiveIdDic", get_passiveIdDic, set_passiveIdDic);
		L.RegVar("passiveId2", get_passiveId2, set_passiveId2);
		L.RegVar("aeonId", get_aeonId, set_aeonId);
		L.RegVar("aeonSkill", get_aeonSkill, set_aeonSkill);
		L.RegVar("aeonSkillLevel", get_aeonSkillLevel, set_aeonSkillLevel);
		L.RegVar("aeonEffectId", get_aeonEffectId, set_aeonEffectId);
		L.RegVar("hitCD", get_hitCD, set_hitCD);
		L.RegVar("skill1CD", get_skill1CD, set_skill1CD);
		L.RegVar("skill2CD", get_skill2CD, set_skill2CD);
		L.RegVar("speed", get_speed, set_speed);
		L.RegVar("HP", get_HP, set_HP);
		L.RegVar("maxHP", get_maxHP, set_maxHP);
		L.RegVar("angerValue", get_angerValue, set_angerValue);
		L.RegVar("maxAngerValue", get_maxAngerValue, set_maxAngerValue);
		L.RegVar("pos", get_pos, set_pos);
		L.RegVar("eulerAngles", get_eulerAngles, set_eulerAngles);
		L.RegVar("scale", get_scale, set_scale);
		L.RegVar("positionId", get_positionId, set_positionId);
		L.RegVar("hitSkillInfo", get_hitSkillInfo, set_hitSkillInfo);
		L.RegVar("skillInfo1", get_skillInfo1, set_skillInfo1);
		L.RegVar("skillInfo2", get_skillInfo2, set_skillInfo2);
		L.RegVar("aeonSkillInfo", get_aeonSkillInfo, set_aeonSkillInfo);
		L.RegVar("roleType", get_roleType, set_roleType);
		L.RegVar("roleInfo", get_roleInfo, set_roleInfo);
		L.RegVar("dlevel", get_dlevel, set_dlevel);
		L.RegVar("floatable", get_floatable, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_Character_Model_CharacterBaseInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Logic.Character.Model.CharacterBaseInfo obj = new Logic.Character.Model.CharacterBaseInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.Character.Model.CharacterBaseInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateCharacterBaseInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, typeof(Logic.Character.Model.CharacterBaseInfo), typeof(Logic.Hero.Model.HeroData)))
			{
				Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)ToLua.ToObject(L, 1);
				Logic.Hero.Model.HeroData arg0 = (Logic.Hero.Model.HeroData)ToLua.ToObject(L, 2);
				Logic.Character.Model.CharacterBaseInfo o = obj.UpdateCharacterBaseInfo(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, typeof(Logic.Character.Model.CharacterBaseInfo), typeof(uint), typeof(uint)))
			{
				Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)ToLua.ToObject(L, 1);
				uint arg0 = (uint)LuaDLL.lua_tonumber(L, 2);
				uint arg1 = (uint)LuaDLL.lua_tonumber(L, 3);
				Logic.Character.Model.CharacterBaseInfo o = obj.UpdateCharacterBaseInfo(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Logic.Character.Model.CharacterBaseInfo.UpdateCharacterBaseInfo");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateCharacterBaseInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, typeof(Logic.Player.Model.PlayerInfo)))
			{
				Logic.Player.Model.PlayerInfo arg0 = (Logic.Player.Model.PlayerInfo)ToLua.ToObject(L, 1);
				Logic.Character.Model.CharacterBaseInfo o = Logic.Character.Model.CharacterBaseInfo.CreateCharacterBaseInfo(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, typeof(Logic.Hero.Model.HeroInfo)))
			{
				Logic.Hero.Model.HeroInfo arg0 = (Logic.Hero.Model.HeroInfo)ToLua.ToObject(L, 1);
				Logic.Character.Model.CharacterBaseInfo o = Logic.Character.Model.CharacterBaseInfo.CreateCharacterBaseInfo(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Logic.Character.Model.CharacterBaseInfo.CreateCharacterBaseInfo");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instanceID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.instanceID;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index instanceID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_baseId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.baseId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index baseId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hitId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.hitId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillId1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.skillId1;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillId2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.skillId2;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_passiveIdDic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			System.Collections.Generic.Dictionary<int,int> ret = obj.passiveIdDic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index passiveIdDic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_passiveId2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.passiveId2;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index passiveId2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aeonId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.aeonId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aeonSkill(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.aeonSkill;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkill on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aeonSkillLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.aeonSkillLevel;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkillLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aeonEffectId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.aeonEffectId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonEffectId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hitCD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float ret = obj.hitCD;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitCD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skill1CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float ret = obj.skill1CD;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skill1CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skill2CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float ret = obj.skill2CD;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skill2CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			int ret = obj.speed;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index speed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			int ret = obj.HP;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxHP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.maxHP;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxHP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_angerValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float ret = obj.angerValue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index angerValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxAngerValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float ret = obj.maxAngerValue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxAngerValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 ret = obj.pos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_eulerAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 ret = obj.eulerAngles;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index eulerAngles on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 ret = obj.scale;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index scale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_positionId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.positionId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index positionId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hitSkillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo ret = obj.hitSkillInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitSkillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillInfo1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo ret = obj.skillInfo1;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillInfo2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo ret = obj.skillInfo2;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aeonSkillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo ret = obj.aeonSkillInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_roleType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Enums.RoleType ret = obj.roleType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index roleType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_roleInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Role.Model.RoleInfo ret = obj.roleInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index roleInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dlevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint ret = obj.dlevel;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dlevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_floatable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			bool ret = obj.floatable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index floatable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_instanceID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.instanceID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index instanceID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_baseId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.baseId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index baseId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hitId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.hitId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillId1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.skillId1 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillId2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.skillId2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillId2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_passiveIdDic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			System.Collections.Generic.Dictionary<int,int> arg0 = (System.Collections.Generic.Dictionary<int,int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<int,int>));
			obj.passiveIdDic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index passiveIdDic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_passiveId2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.passiveId2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index passiveId2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aeonId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.aeonId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aeonSkill(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.aeonSkill = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkill on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aeonSkillLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.aeonSkillLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkillLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aeonEffectId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.aeonEffectId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonEffectId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hitCD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.hitCD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitCD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skill1CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.skill1CD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skill1CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skill2CD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.skill2CD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skill2CD on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.speed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index speed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.HP = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxHP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.maxHP = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxHP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_angerValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.angerValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index angerValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxAngerValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxAngerValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index maxAngerValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.pos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_eulerAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.eulerAngles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index eulerAngles on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.scale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index scale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_positionId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.positionId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index positionId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hitSkillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo arg0 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillInfo));
			obj.hitSkillInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hitSkillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillInfo1(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo arg0 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillInfo));
			obj.skillInfo1 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo1 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillInfo2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo arg0 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillInfo));
			obj.skillInfo2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aeonSkillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Skill.Model.SkillInfo arg0 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillInfo));
			obj.aeonSkillInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index aeonSkillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_roleType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Enums.RoleType arg0 = (Logic.Enums.RoleType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.RoleType));
			obj.roleType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index roleType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_roleInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			Logic.Role.Model.RoleInfo arg0 = (Logic.Role.Model.RoleInfo)ToLua.CheckObject(L, 2, typeof(Logic.Role.Model.RoleInfo));
			obj.roleInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index roleInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dlevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.CharacterBaseInfo obj = (Logic.Character.Model.CharacterBaseInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.dlevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dlevel on a nil value" : e.Message);
		}
	}
}

