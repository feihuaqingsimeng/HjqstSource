//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_TalkingData_Controller_TalkingDataControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.TalkingData.Controller.TalkingDataController), typeof(SingletonPersistent<Logic.TalkingData.Controller.TalkingDataController>));
		L.RegFunction("TDGAItemOnPurchase", TDGAItemOnPurchase);
		L.RegFunction("TDGAItemOnPurchaseByCount", TDGAItemOnPurchaseByCount);
		L.RegFunction("TDGAItemOnUse", TDGAItemOnUse);
		L.RegFunction("New", _CreateLogic_TalkingData_Controller_TalkingDataController);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_TalkingData_Controller_TalkingDataController(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Logic.TalkingData.Controller.TalkingDataController obj = new Logic.TalkingData.Controller.TalkingDataController();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.TalkingData.Controller.TalkingDataController.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TDGAItemOnPurchase(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Logic.TalkingData.Controller.TalkingDataController obj = (Logic.TalkingData.Controller.TalkingDataController)ToLua.CheckObject(L, 1, typeof(Logic.TalkingData.Controller.TalkingDataController));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			double arg4 = (double)LuaDLL.luaL_checknumber(L, 6);
			obj.TDGAItemOnPurchase(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TDGAItemOnPurchaseByCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Logic.TalkingData.Controller.TalkingDataController obj = (Logic.TalkingData.Controller.TalkingDataController)ToLua.CheckObject(L, 1, typeof(Logic.TalkingData.Controller.TalkingDataController));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			double arg2 = (double)LuaDLL.luaL_checknumber(L, 4);
			obj.TDGAItemOnPurchaseByCount(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TDGAItemOnUse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Logic.TalkingData.Controller.TalkingDataController obj = (Logic.TalkingData.Controller.TalkingDataController)ToLua.CheckObject(L, 1, typeof(Logic.TalkingData.Controller.TalkingDataController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.TDGAItemOnUse(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

