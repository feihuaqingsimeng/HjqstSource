//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Character_Model_BuffInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Character.Model.BuffInfo), typeof(System.Object));
		L.RegFunction("Set2OutOfTime", Set2OutOfTime);
		L.RegFunction("New", _CreateLogic_Character_Model_BuffInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("mechanics", get_mechanics, set_mechanics);
		L.RegVar("character", get_character, set_character);
		L.RegVar("target", get_target, set_target);
		L.RegVar("skillInfo", get_skillInfo, set_skillInfo);
		L.RegVar("buffType", get_buffType, set_buffType);
		L.RegVar("buffAddType", get_buffAddType, set_buffAddType);
		L.RegVar("judgeType", get_judgeType, set_judgeType);
		L.RegVar("count", get_count, set_count);
		L.RegVar("targetSkillId", get_targetSkillId, set_targetSkillId);
		L.RegVar("forever", get_forever, set_forever);
		L.RegVar("disperseable", get_disperseable, set_disperseable);
		L.RegVar("kindness", get_kindness, set_kindness);
		L.RegVar("time", get_time, set_time);
		L.RegVar("originalValue", get_originalValue, set_originalValue);
		L.RegVar("value", get_value, set_value);
		L.RegVar("nextTime", get_nextTime, set_nextTime);
		L.RegVar("interval", get_interval, set_interval);
		L.RegVar("outOfTime", get_outOfTime, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_Character_Model_BuffInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 7)
			{
				Logic.Character.CharacterEntity arg0 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 1, typeof(Logic.Character.CharacterEntity));
				Logic.Skill.Model.MechanicsData arg1 = (Logic.Skill.Model.MechanicsData)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.MechanicsData));
				Logic.Enums.BuffType arg2 = (Logic.Enums.BuffType)ToLua.CheckObject(L, 3, typeof(Logic.Enums.BuffType));
				float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
				float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				float arg6 = (float)LuaDLL.luaL_checknumber(L, 7);
				Logic.Character.Model.BuffInfo obj = new Logic.Character.Model.BuffInfo(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, typeof(Logic.Character.CharacterEntity), typeof(Logic.Character.CharacterEntity), typeof(Logic.Skill.Model.SkillInfo), typeof(Logic.Skill.Model.MechanicsData), typeof(Logic.Enums.BuffType), typeof(Logic.Enums.SkillLevelBuffAddType), typeof(Logic.Enums.BuffAddType), typeof(float), typeof(float), typeof(uint), typeof(int)))
			{
				Logic.Character.CharacterEntity arg0 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 1, typeof(Logic.Character.CharacterEntity));
				Logic.Character.CharacterEntity arg1 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 2, typeof(Logic.Character.CharacterEntity));
				Logic.Skill.Model.SkillInfo arg2 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 3, typeof(Logic.Skill.Model.SkillInfo));
				Logic.Skill.Model.MechanicsData arg3 = (Logic.Skill.Model.MechanicsData)ToLua.CheckObject(L, 4, typeof(Logic.Skill.Model.MechanicsData));
				Logic.Enums.BuffType arg4 = (Logic.Enums.BuffType)ToLua.CheckObject(L, 5, typeof(Logic.Enums.BuffType));
				Logic.Enums.SkillLevelBuffAddType arg5 = (Logic.Enums.SkillLevelBuffAddType)ToLua.CheckObject(L, 6, typeof(Logic.Enums.SkillLevelBuffAddType));
				Logic.Enums.BuffAddType arg6 = (Logic.Enums.BuffAddType)ToLua.CheckObject(L, 7, typeof(Logic.Enums.BuffAddType));
				float arg7 = (float)LuaDLL.luaL_checknumber(L, 8);
				float arg8 = (float)LuaDLL.luaL_checknumber(L, 9);
				uint arg9 = (uint)LuaDLL.luaL_checknumber(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				Logic.Character.Model.BuffInfo obj = new Logic.Character.Model.BuffInfo(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 12 && TypeChecker.CheckTypes(L, typeof(Logic.Character.CharacterEntity), typeof(Logic.Character.CharacterEntity), typeof(Logic.Skill.Model.SkillInfo), typeof(Logic.Skill.Model.MechanicsData), typeof(Logic.Enums.BuffType), typeof(Logic.Enums.SkillLevelBuffAddType), typeof(Logic.Enums.BuffAddType), typeof(int), typeof(uint), typeof(float), typeof(uint), typeof(int)))
			{
				Logic.Character.CharacterEntity arg0 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 1, typeof(Logic.Character.CharacterEntity));
				Logic.Character.CharacterEntity arg1 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 2, typeof(Logic.Character.CharacterEntity));
				Logic.Skill.Model.SkillInfo arg2 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 3, typeof(Logic.Skill.Model.SkillInfo));
				Logic.Skill.Model.MechanicsData arg3 = (Logic.Skill.Model.MechanicsData)ToLua.CheckObject(L, 4, typeof(Logic.Skill.Model.MechanicsData));
				Logic.Enums.BuffType arg4 = (Logic.Enums.BuffType)ToLua.CheckObject(L, 5, typeof(Logic.Enums.BuffType));
				Logic.Enums.SkillLevelBuffAddType arg5 = (Logic.Enums.SkillLevelBuffAddType)ToLua.CheckObject(L, 6, typeof(Logic.Enums.SkillLevelBuffAddType));
				Logic.Enums.BuffAddType arg6 = (Logic.Enums.BuffAddType)ToLua.CheckObject(L, 7, typeof(Logic.Enums.BuffAddType));
				int arg7 = (int)LuaDLL.luaL_checknumber(L, 8);
				uint arg8 = (uint)LuaDLL.luaL_checknumber(L, 9);
				float arg9 = (float)LuaDLL.luaL_checknumber(L, 10);
				uint arg10 = (uint)LuaDLL.luaL_checknumber(L, 11);
				int arg11 = (int)LuaDLL.luaL_checknumber(L, 12);
				Logic.Character.Model.BuffInfo obj = new Logic.Character.Model.BuffInfo(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.Character.Model.BuffInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Set2OutOfTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)ToLua.CheckObject(L, 1, typeof(Logic.Character.Model.BuffInfo));
			obj.Set2OutOfTime();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mechanics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Skill.Model.MechanicsData ret = obj.mechanics;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanics on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_character(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Character.CharacterEntity ret = obj.character;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index character on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_target(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Character.CharacterEntity ret = obj.target;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index target on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Skill.Model.SkillInfo ret = obj.skillInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buffType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Enums.BuffType ret = obj.buffType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index buffType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buffAddType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Enums.BuffAddType ret = obj.buffAddType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index buffAddType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_judgeType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int ret = obj.judgeType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index judgeType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int ret = obj.count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetSkillId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			uint ret = obj.targetSkillId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetSkillId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_forever(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool ret = obj.forever;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index forever on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_disperseable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool ret = obj.disperseable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index disperseable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_kindness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool ret = obj.kindness;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index kindness on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_time(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float ret = obj.time;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index time on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_originalValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float ret = obj.originalValue;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index originalValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_value(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float ret = obj.value;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index value on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nextTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int ret = obj.nextTime;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nextTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int ret = obj.interval;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index interval on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_outOfTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool ret = obj.outOfTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index outOfTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanics(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Skill.Model.MechanicsData arg0 = (Logic.Skill.Model.MechanicsData)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.MechanicsData));
			obj.mechanics = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanics on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_character(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Character.CharacterEntity arg0 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 2, typeof(Logic.Character.CharacterEntity));
			obj.character = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index character on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_target(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Character.CharacterEntity arg0 = (Logic.Character.CharacterEntity)ToLua.CheckUnityObject(L, 2, typeof(Logic.Character.CharacterEntity));
			obj.target = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index target on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Skill.Model.SkillInfo arg0 = (Logic.Skill.Model.SkillInfo)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillInfo));
			obj.skillInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillInfo on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buffType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Enums.BuffType arg0 = (Logic.Enums.BuffType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.BuffType));
			obj.buffType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index buffType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buffAddType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			Logic.Enums.BuffAddType arg0 = (Logic.Enums.BuffAddType)ToLua.CheckObject(L, 2, typeof(Logic.Enums.BuffAddType));
			obj.buffAddType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index buffAddType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_judgeType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.judgeType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index judgeType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.count = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index count on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetSkillId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.targetSkillId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index targetSkillId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_forever(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.forever = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index forever on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_disperseable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.disperseable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index disperseable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_kindness(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.kindness = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index kindness on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_time(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.time = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index time on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_originalValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.originalValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index originalValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_value(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.value = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index value on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_nextTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.nextTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nextTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_interval(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Character.Model.BuffInfo obj = (Logic.Character.Model.BuffInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.interval = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index interval on a nil value" : e.Message);
		}
	}
}

