//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_UI_Friend_Model_FriendInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.UI.Friend.Model.FriendInfo), typeof(System.Object));
		L.RegFunction("Update", Update);
		L.RegFunction("UpdateTeam", UpdateTeam);
		L.RegFunction("New", _CreateLogic_UI_Friend_Model_FriendInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("id", get_id, set_id);
		L.RegVar("level", get_level, set_level);
		L.RegVar("name", get_name, set_name);
		L.RegVar("power", get_power, set_power);
		L.RegVar("lastLoginTime", get_lastLoginTime, set_lastLoginTime);
		L.RegVar("isGetPveAction", get_isGetPveAction, set_isGetPveAction);
		L.RegVar("isDonate", get_isDonate, set_isDonate);
		L.RegVar("isBothAuth", get_isBothAuth, set_isBothAuth);
		L.RegVar("headIcon", get_headIcon, set_headIcon);
		L.RegVar("formationHeroList", get_formationHeroList, set_formationHeroList);
		L.RegVar("vip", get_vip, set_vip);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_UI_Friend_Model_FriendInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Logic.UI.Friend.Model.FriendInfo obj = new Logic.UI.Friend.Model.FriendInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, typeof(Logic.Protocol.Model.FriendProtoData)))
			{
				Logic.Protocol.Model.FriendProtoData arg0 = (Logic.Protocol.Model.FriendProtoData)ToLua.CheckObject(L, 1, typeof(Logic.Protocol.Model.FriendProtoData));
				Logic.UI.Friend.Model.FriendInfo obj = new Logic.UI.Friend.Model.FriendInfo(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.UI.Friend.Model.FriendInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)ToLua.CheckObject(L, 1, typeof(Logic.UI.Friend.Model.FriendInfo));
			Logic.Protocol.Model.FriendProtoData arg0 = (Logic.Protocol.Model.FriendProtoData)ToLua.CheckObject(L, 2, typeof(Logic.Protocol.Model.FriendProtoData));
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateTeam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)ToLua.CheckObject(L, 1, typeof(Logic.UI.Friend.Model.FriendInfo));
			Logic.Protocol.Model.TeamDetailProtoData arg0 = (Logic.Protocol.Model.TeamDetailProtoData)ToLua.CheckObject(L, 2, typeof(Logic.Protocol.Model.TeamDetailProtoData));
			obj.UpdateTeam(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int ret = obj.id;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index id on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int ret = obj.level;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_power(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int ret = obj.power;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index power on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lastLoginTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			long ret = obj.lastLoginTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lastLoginTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isGetPveAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool ret = obj.isGetPveAction;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isGetPveAction on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isDonate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool ret = obj.isDonate;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isDonate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isBothAuth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool ret = obj.isBothAuth;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isBothAuth on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_headIcon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			string ret = obj.headIcon;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index headIcon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_formationHeroList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			System.Collections.Generic.List<Logic.Role.Model.RoleInfo> ret = obj.formationHeroList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index formationHeroList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int ret = obj.vip;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index vip on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.id = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index id on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_level(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.level = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index level on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_power(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.power = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index power on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lastLoginTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			obj.lastLoginTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lastLoginTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isGetPveAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isGetPveAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isGetPveAction on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isDonate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isDonate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isDonate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isBothAuth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isBothAuth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isBothAuth on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_headIcon(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.headIcon = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index headIcon on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_formationHeroList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			System.Collections.Generic.List<Logic.Role.Model.RoleInfo> arg0 = (System.Collections.Generic.List<Logic.Role.Model.RoleInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Logic.Role.Model.RoleInfo>));
			obj.formationHeroList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index formationHeroList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.UI.Friend.Model.FriendInfo obj = (Logic.UI.Friend.Model.FriendInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.vip = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index vip on a nil value" : e.Message);
		}
	}
}

