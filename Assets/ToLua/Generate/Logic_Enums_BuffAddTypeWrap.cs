//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Enums_BuffAddTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Logic.Enums.BuffAddType));
		L.RegVar("None", get_None, null);
		L.RegVar("Fixed", get_Fixed, null);
		L.RegVar("Percent", get_Percent, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.BuffAddType.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Fixed(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.BuffAddType.Fixed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Percent(IntPtr L)
	{
		ToLua.Push(L, Logic.Enums.BuffAddType.Percent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Logic.Enums.BuffAddType o = (Logic.Enums.BuffAddType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

