//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Logic_Skill_Model_SkillInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Logic.Skill.Model.SkillInfo), typeof(System.Object));
		L.RegFunction("GetSkillListByIds", GetSkillListByIds);
		L.RegFunction("New", _CreateLogic_Skill_Model_SkillInfo);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("rotateAngles", get_rotateAngles, set_rotateAngles);
		L.RegVar("currentLevel", get_currentLevel, set_currentLevel);
		L.RegVar("effectDelay", get_effectDelay, set_effectDelay);
		L.RegVar("mechanicsIndex", get_mechanicsIndex, set_mechanicsIndex);
		L.RegVar("skillData", get_skillData, set_skillData);
		L.RegVar("animationData", get_animationData, set_animationData);
		L.RegVar("characterInstanceId", get_characterInstanceId, set_characterInstanceId);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLogic_Skill_Model_SkillInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
				Logic.Skill.Model.SkillInfo obj = new Logic.Skill.Model.SkillInfo(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Logic.Skill.Model.SkillInfo.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSkillListByIds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 1);
			System.Collections.Generic.List<Logic.Skill.Model.SkillInfo> o = Logic.Skill.Model.SkillInfo.GetSkillListByIds(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rotateAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			UnityEngine.Vector3 ret = obj.rotateAngles;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rotateAngles on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			uint ret = obj.currentLevel;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			float ret = obj.effectDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mechanicsIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			int ret = obj.mechanicsIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skillData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			Logic.Skill.Model.SkillData ret = obj.skillData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animationData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			Logic.Skill.Model.AnimationData ret = obj.animationData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animationData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_characterInstanceId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			uint ret = obj.characterInstanceId;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index characterInstanceId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rotateAngles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.rotateAngles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rotateAngles on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_currentLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.currentLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.effectDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mechanicsIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.mechanicsIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mechanicsIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_skillData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			Logic.Skill.Model.SkillData arg0 = (Logic.Skill.Model.SkillData)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.SkillData));
			obj.skillData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skillData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_animationData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			Logic.Skill.Model.AnimationData arg0 = (Logic.Skill.Model.AnimationData)ToLua.CheckObject(L, 2, typeof(Logic.Skill.Model.AnimationData));
			obj.animationData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animationData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_characterInstanceId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Logic.Skill.Model.SkillInfo obj = (Logic.Skill.Model.SkillInfo)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.characterInstanceId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index characterInstanceId on a nil value" : e.Message);
		}
	}
}

